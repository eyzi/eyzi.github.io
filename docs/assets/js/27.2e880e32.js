(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{411:function(t,n,e){"use strict";e.r(n);var a=e(54),o=Object(a.a)({},(function(){var t=this,n=t.$createElement,e=t._self._c||n;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"introduction"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#introduction"}},[t._v("#")]),t._v(" Introduction")]),t._v(" "),e("p",[t._v("Personally, I find naming quite hard in general. It is easy to smash\nthe keyboard and let fate construct a name but, as with\n"),e("RouterLink",{attrs:{to:"/case-styles/"}},[t._v("case styles")]),t._v(", not giving thought to this can cause\nheadaches when reading codes.")],1),t._v(" "),e("p",[t._v("Not only do you need to find the right words to make your variables\ndescriptive, they also need to be concise. When you reuse a concept\nover and over in your code, at some point, you'll run out of ways to\nconvey the same thing in a unique way.")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("ðŸ“„ final.doc\nðŸ“„ final2.doc\nðŸ“„ final-final.doc\nðŸ“„ actual-final.doc\nðŸ“„ ASASFDADSF.doc\nðŸ“„ final-real.doc\n")])])])])}),[],!1,null,null,null);n.default=o.exports}}]);